# 백준 16837

'''
문제
정수 좌표 점마다 교차하는 격자판이 있고, 이 격자판 위에 집이 두 개 있다.
한 집에서 다른 집으로 가려면 무조건 격자 위로만 가야 한다.
한 집에서 다른 집까지 유클리드 거리 d가 주어질 때,
격자 위로만 이동해서 갈 수 있는 거리의 최대값을 구하는 문제이다.

생각 1
이 문제에서는 유클리드 거리가 아니라 맨해튼 거리를 구해야 한다.
맨해튼 거리는 대각선 경로로는 가지 않고, 가로, 세로 경로로만 이동하여 목적지에 도착하는 경로이다.

예제 2를 생각해보면,
두 점이 주어질 때 유클리드 거리를 지름으로 하는 원을 그리면,
지름을 빗변으로 하는 직각이등변삼각형이 나오게 된다.
이 삼각형의 밑변과 높이의 합이 맨해튼 거리의 최대값이 된다.

단, 예제 1의 경우 A(0.5, 0), B(0.5, 1)에 있는 경우
맨해튼 거리는 (0.5, 0) -> (1, 0) -> (1, 1) -> (0.5, 1)로 가는 경로가 최장 거리가 된다.

예제 1과 예제 2를 구분짓는 조건은 d가
1 ~ sqrt(2) 일 때,
2 ~ sqrt(5) 일 때,
3 ~ sqrt(10)일 때,
...
10 ~ sqrt(101)일 때,
즉 가로 한 칸, 세로 n칸일 경우에 해당된다.
그러나 d가 1일 때는 예제 1인 경우가 더 큰 값이 나오지만,
d가 10일 때는 예제 2인 경우가 더 큰 값이 나온다.
따라서 두 값을 비교해서 큰 값을 반환하자.
'''

import sys
import math

input = sys.stdin.readline


def solve(D: float) -> float:
    case1 = 0
    for i in range(1, 11):
        if i <= D <= math.sqrt(i**2+1):
            case1 = i+1
    
    case2 = D * math.sqrt(2)

    return max(case1, case2)


def main():
    D = float(input())

    print(solve(D))


main()