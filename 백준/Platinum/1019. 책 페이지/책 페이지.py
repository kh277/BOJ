# 백준 1019

'''
N이 10억보다 작거나 같은 자연수이므로 O(N)으로 풀 경우 시간초과가 발생한다.
따라서 N의 자릿수 별로 각 숫자의 개수를 세는 방법으로 접근하자.

ex) N = 4053
0페이지도 존재한다고 가정하고 계산하자. 또, 0000은 0이 4개 포함되어 있다고 가정하고 마지막에 빼자.

천의 자리 계산
과정2: 0000~3999 -> [0, 1, 2, 3]이 1000개씩 존재
과정3: 4000~4053 -> [4]가 053+1개 존재

백의 자리 계산
과정1: 0000~3999 -> [0, 1, 2, 3, ..., 9]가 4*100개씩 존재
과정2: 4000~4000 -> []이 100개씩 존재
과정3: 4000~4053 -> [0]이 53+1개 존재

십의 자리 계산
과정1: 0000~3999 -> [0, 1, 2, 3, ..., 9]가 40*10개씩 존재
과정2: 4000~4049 -> [0, 1, 2, 3, 4]가 10개씩 존재
과정3: 4050~4053 -> [5]가 3+1개 존재

일의 자리 계산
과정1: 0000~4049 -> [0, 1, 2, 3, ..., 9]가 405*1개씩 존재
과정2: 4050~4052 -> [0, 1, 2]가 1개씩 존재
과정3: 4053~4053 -> [3]이 0+1개 존재

과정4: 맨 앞자리에 0이 나오는 경우 제외
천의 자리에서 1000개, 백의 자리에서 100개, 십의 자리에서 10개, 일의 자리에서 1개이므로 1111만큼 0번 칸에서 빼기
'''

import math
from sys import stdin

input = stdin.readline

def solve(N: int) -> list:
    result = [0 for _ in range(10)]
    
    for i in range(len(str(N)), 0, -1):
        temp1 = N // 10**i
        temp2 = N % 10**i

        # 과정1
        for j in range(10):
            result[j] += temp1 * 10**(i-1)
        
        temp3 = temp2 // 10**(i-1)
        temp4 = temp2 % 10**(i-1)

        # 과정2
        for j in range(temp3):
            result[j] += 10**(i-1)

        # 과정3
        result[temp3] += temp4 + 1

        
    # 과정4
    for i in range(len(str(N))):
        result[0] -= 10**i
        
    return result


def main():
    N = int(input())
    print(*solve(N))

main()