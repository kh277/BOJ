# 백준 24307

'''
f(N) = N의 각 자릿수를 곱하여 만든 새로운 수라고 정의하면,
f(N)을 k번 반복하면 그 결과가 한 자리수가 될 때, 이 수 N은 지속성이 k라고 한다.
P가 주어질 때, 지속성이 P인 수 중 가장 작은 숫자를 찾는 문제이다.

N이 11일 때의 값까진 구해져 있지만, 12 이상일 때의 값은 알려져 있지 않다고 한다.
아무리 찾아봐도 브루트포스밖에 방법이 없는거 같은데 1초 내에 풀어야 한다...
그냥 미리 구해진 값을 런타임 전의 전처리로 출력하는 방법밖에 없는 것 같다.
'''

import io

input = io.BufferedReader(io.FileIO(0)).readline
result = [0, 10, 25, 39, 77, 679, 6788, 68889, 2677889, 26888999, 3778888999, 277777788888899]


# main 함수 ----------
N = int(input())
print(result[N])
